generator client {
  provider = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}
datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Users {
  id           String    @id @unique @default(cuid())
  createdAt    DateTime? @default(now())
  status       String?
  ServiceStart DateTime?
  ServiceEnd   DateTime?
  wallet       String?
  Accounts          Accounts[]
}

model Accounts {
  id            String    @id @unique @default(cuid())
  createdAt     DateTime? @default(now())
  walletAddress String    @unique
  session       String
  accId         String    @unique
  maxPower      Int?
  status        String?
  ownerId       String?
  owner         Users     @relation(fields: [usersId], references: [id])
  usersId       String 
  updatedAt DateTime? @updatedAt
}

model MarketUsers{
  id String @id @unique @default(cuid())
  email String? 
  walletAddress String?
  createdAt DateTime @default(now())
  updatedAt DateTime? @updatedAt
  status Boolean @default(false)
  name String?
  uId String @unique
  cookie String
  // authCook         Cookies[]
}
model Cookies{
  id String @id @unique @default(cuid())
  auth String?
  email String?
  walletAddress String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  endAt DateTime?
  usersId String
  // owner MarketUsers     @relation(fields: [usersId], references: [id])
  
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  PaymentStatus Boolean @default(false)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}